var documenterSearchIndex = {"docs":
[{"location":"developer/#For-package-developers","page":"For package developers","title":"For package developers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PkgCite","category":"page"},{"location":"#PkgCite","page":"Home","title":"PkgCite","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The PkgCite julia package is useful for retrieving citation information for julia packages. By convention, julia packages that have a paper (or some other citable work associated) contain a CITATION.bib file in the root of the package directory. This package helps user collect a .bib file corresponding to all the pacakges and their dependencies in the current active environment and it also provides and automatically generated sentence that references julia and the used packages.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"note: Note\nIn order to give the most up to date citation information, PkgCite works with the packages in the current active environment / project. Be sure to activate the desired environment before retrieving the citation data.","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are 2 main exported functions for this package: get_citations and get_tool_citation. If you only need a .bib file which concatenates all the CITATION.bib files of all the packages and their dependencies in the current active environment, then you will only need get_citations. Note that the generated .bib file doesn't include the citation for the Julia language itself.","category":"page"},{"location":"","page":"Home","title":"Home","text":"get_citations","category":"page"},{"location":"#PkgCite.get_citations","page":"Home","title":"PkgCite.get_citations","text":"get_citations(; only_direct=false, filename=\"julia_citations.bib\")\n\nThis function will create a .bib file with all the citations collected form the CITATION.bib files corresponding to the dependecies of the current active environment. Use filename to change the name of the file. To include just the direct dependencies use only_direct=true\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"tip: Tip\nWhen working on a new project / paper it is useful to create a julia project to isolate the packages you use from other projects or the default environment. This will also help others reproduce your results easier, since it they have your Project.toml and Manifest.toml files, with ]instantiate they will get the exact same package versions as you do, elliminating thus problems with incompatible package versions. See also the DrWatson package, which can help you manage scientific projects.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you also need to get the automatically generated sentence referencig julia, you will have to use get_tool_citation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"get_tool_citation","category":"page"},{"location":"#PkgCite.get_tool_citation","page":"Home","title":"PkgCite.get_tool_citation","text":"get_tool_citation(io::IO=stdout; jl = true, texttt = false, copy = true, cite_commands=Dict{String,String}(), filename=\"julia_citations.bib\")\n\nPrint a sentence describing the packages used in the current environment. If you only want to consider the direct dependencies, you can set only_direct=true. The sentence is automatically copied to the clipboard(you can avoid this by using copy=false). The package names have the .jl ending by default. You can ommit it with jl=false. Package names can be wrapped in texttt by setting texttt=true and you can also customize the cite command used for each package by using cite_commands=Dict(\"PackageName\"=>\"custom_cite\"). The filename of the .bib file can be passed via the filename keyword.\n\n\n\n\n\n","category":"function"}]
}
